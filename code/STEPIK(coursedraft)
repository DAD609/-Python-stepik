{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"#1.5 Операции с целыми числами\n#Составьте выражение для вычисления в интерпретаторе Python 3 и вставьте в поле ответа результат вычисления:\nprint(11111*1111111)\n#Составьте выражение для вычисления указанной ниже формулы и вставьте в поле ответа вывод интерпретатора после вычисления этого выражения.\n#print(42/(4+(2*(-2))))\n#Составьте выражение для вычисления в интерпретаторе Python 3 и вставьте в поле ответа результат вычисления:\nprint(2014**14)","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-06T09:05:36.776309Z","iopub.execute_input":"2024-07-06T09:05:36.776799Z","iopub.status.idle":"2024-07-06T09:05:36.784111Z","shell.execute_reply.started":"2024-07-06T09:05:36.776759Z","shell.execute_reply":"2024-07-06T09:05:36.782854Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":10,"outputs":[{"name":"stdout","text":"12345554321\n18064773765607550801425251468864907833685590016\n","output_type":"stream"}]},{"cell_type":"code","source":"#1.6 Операции с вещественными числами\n#Запишите число 1.2345e3 в виде десятичной дроби.\nprint(1.2345e3)\n#Запишите число 1.2345e-3 в виде десятичной дроби\nprint(1.2345e-3)\n#Составьте выражение для вычисления в интерпретаторе Python 3 и вставьте в поле ответа результат вычисления:\nprint(2014.0**14)\n#Составьте выражение для вычисления в интерпретаторе Python 3 и вставьте в поле ответа результат вычисления:\nprint(7/3)\n#Составьте выражение для вычисления в интерпретаторе Python 3 и вставьте в поле ответа результат вычисления:\nprint(7//3)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T09:25:38.086956Z","iopub.execute_input":"2024-07-06T09:25:38.087364Z","iopub.status.idle":"2024-07-06T09:25:38.094779Z","shell.execute_reply.started":"2024-07-06T09:25:38.087332Z","shell.execute_reply":"2024-07-06T09:25:38.093416Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":17,"outputs":[{"name":"stdout","text":"1234.5\n0.0012345\n1.806477376560755e+46\n2.3333333333333335\n2\n","output_type":"stream"}]},{"cell_type":"code","source":"#1.7 Типы данных\n#Составьте выражение для вычисления в интерпретаторе Python 3 и вставьте в поле ответа результат вычисления. Приведите к целому типу число 2.99\nprint(int(2.99))\n#Составьте выражение для вычисления в интерпретаторе Python 3 и вставьте в поле ответа результат вычисления.Приведите к целому типу число -1.6\nprint(int(-1.6))\n#Вычислите в python значение выражения 9**19 - int(float(9**19))\nprint(9**19- int(float(9**19)))","metadata":{"execution":{"iopub.status.busy":"2024-07-06T09:30:50.588015Z","iopub.execute_input":"2024-07-06T09:30:50.588482Z","iopub.status.idle":"2024-07-06T09:30:50.596934Z","shell.execute_reply.started":"2024-07-06T09:30:50.588442Z","shell.execute_reply":"2024-07-06T09:30:50.595419Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":20,"outputs":[{"name":"stdout","text":"2\n-1\n89\n","output_type":"stream"}]},{"cell_type":"code","source":"#1.8 Переменные. Стандартный ввод/вывод\n#Тимофей обычно спит ночью X часов и устраивает себе днем тихий час на Y минут. Определите, сколько всего минут Тимофей спит в сутки.\nX = int(input())\nY = int(input())\nprint(X*60 + Y)\n#Коля каждый день ложится спать ровно в полночь и недавно узнал, что оптимальное время для его сна составляет X минут. Коля хочет поставить себе будильник так, чтобы он прозвенел ровно через  X минут после полуночи, однако для этого необходимо указать время сигнала в формате часы, минуты. Помогите Коле определить, на какое время завести будильник.\n# put your python code here\nX = int(input())\nH=X//60\nM=X%60\nprint(H)\nprint(M)\n#Катя узнала, что ей для сна надо  X минут. В отличие от Коли, Катя ложится спать после полуночи в H часов и M минут. Помогите Кате определить, на какое время ей поставить будильник, чтобы он прозвенел ровно через X минут после того, как она ляжет спать.\nX=int(input())\nH=int(input())\nM=int(input())\nsumh=X//60 +H\nsumm=X%60 + M\nwhile summ >=60:\n    sumh +=1\n    summ -=60\nprint(sumh)\nprint(summ)","metadata":{"execution":{"iopub.status.busy":"2024-07-06T09:50:58.780133Z","iopub.execute_input":"2024-07-06T09:50:58.780608Z","iopub.status.idle":"2024-07-06T09:51:05.314119Z","shell.execute_reply.started":"2024-07-06T09:50:58.780568Z","shell.execute_reply":"2024-07-06T09:51:05.312841Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdin","text":" 2\n 3\n"},{"name":"stdout","text":"123\n","output_type":"stream"}]},{"cell_type":"code","source":"#1.9 Логические операции, операции сравнения\n\n#Расставьте скобки в выражении\n\n#a and b or not a and not b\n\n#в соответствии с порядком вычисления выражения (приоритетом операций). Всего потребуется 5 пар скобок (внешние скобки входят в их число).\n\n#Выполните код в интерпретаторе Python 3 и вставьте в поле ответа результат вычисления. Постарайтесь разобраться, почему интерпретатор выдал именно такой ответ. Помните, что любые арифметические операции выше по приоритету операций сравнения и логических операторов.\n\nx = 5\ny = 10\nprint(y > x * x or y >= 2 * x and x < y)\n# первым оператор явл and что вывод True далее or сопостовляет False or True и выводит True\na = True\nb = False\nprint(a and b or not a and not b)\n#сначала инверсия not a далее not b , после a and b =>False и or => False , т.к. неправда с обеих сторон\n","metadata":{"execution":{"iopub.status.busy":"2024-07-10T10:41:27.051484Z","iopub.execute_input":"2024-07-10T10:41:27.052524Z","iopub.status.idle":"2024-07-10T10:41:27.060979Z","shell.execute_reply.started":"2024-07-10T10:41:27.052477Z","shell.execute_reply":"2024-07-10T10:41:27.059597Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"True\nFalse\n","output_type":"stream"}]},{"cell_type":"code","source":"#1.10 Условия: if, else, elif. Блоки, отступы\n#Из передачи “Здоровье” Аня узнала, что рекомендуется спать хотя бы A часов в сутки, но пересыпать тоже вредно и не стоит спать более B часов. Сейчас Аня спит H часов в сутки. Если режим сна Ани удовлетворяет рекомендациям передачи “Здоровье”, выведите “Это нормально”. Если Аня спит менее A часов, выведите “Недосып”, если же более B часов, то выведите “Пересып”.Получаемое число A всегда меньше либо равно B.\nA = int(input())\nB = int(input())\nH = int(input())\nif H < A:\n    print(\"Недосып\")\nelif H>B:\n    print(\"Пересып\")\nelse:\n    print(\"Это нормально\")\n#Требуется определить, является ли данный год високосным.\n\n#Напомним, что високосными годами считаются те годы, порядковый номер которых либо кратен 4, но при этом не кратен 100, либо кратен 400 (например, 2000-й год являлся високосным, а 2100-й будет невисокосным годом).\n\n#Программа должна корректно работать на числах 1900≤n≤3000.\n god =int(input())\nif (god%4==0 and god%100!=0 or god%400==0):\n    print(\"Високосный\")\nelse:\n    print(\"Обычный\")","metadata":{"trusted":true},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdin","text":" \n"}]},{"cell_type":"code","source":"#1.11 Строки\n#Укажите результат выражения:\"123\" + \"42\"\n\"12342\"","metadata":{"execution":{"iopub.status.busy":"2024-07-10T12:59:44.475158Z","iopub.execute_input":"2024-07-10T12:59:44.475535Z","iopub.status.idle":"2024-07-10T12:59:44.509183Z","shell.execute_reply.started":"2024-07-10T12:59:44.475496Z","shell.execute_reply":"2024-07-10T12:59:44.508253Z"},"trusted":true},"execution_count":1,"outputs":[{"execution_count":1,"output_type":"execute_result","data":{"text/plain":"'12342'"},"metadata":{}}]},{"cell_type":"code","source":"#1.12 Задачи по материалам недели\n#В то далёкое время, когда Паша ходил в школу, ему очень не нравилась формула Герона для вычисления площади треугольника, так как казалась слишком сложной. В один прекрасный момент Павел решил избавить всех школьников от страданий и написать и распространить по школам программу, вычисляющую площадь треугольника по трём сторонам.Одна проблема: так как эта формула не нравилась Павлу, он её не запомнил. Помогите ему завершить доброе дело и напишите программу, вычисляющую площадь треугольника по переданным длинам трёх его сторон по формуле Герона\na =int(input())\nb =int(input())\nc =int(input())\np = (a+b+c)/2\ns=  (p*(p-a)*(p-b)*(p-c))**(0.5)\nprint(s)\n#Напишите программу, принимающую на вход целое число, которая выводит True, если переданное значение попадает в интервал \nints=int(input())\nif (-15<ints<=12) or (14<ints<17)or (19<=int):\n    print(True)\nelse:\n    print(False)\n#Напишите простой калькулятор, который считывает с пользовательского ввода три строки: первое число, второе число и операцию, после чего применяет операцию к введённым числам (\"первое число\" \"операция\" \"второе число\") и выводит результат на экран.\na=float(input())\nb=float(input())\nop=input()\nif op == '+' :\n    res=a+b\n    print(res)\nelif op =='-':\n    res=a-b\n    print(res)\nelif op =='pow':\n    res=a**b\n    print(res)\n\nelif op =='/' and b!=0:\n    \n    res=a/b\n    print(res)\n\nelif op =='*':\n    res=a*b\n    print(res)\nelif op =='mod' and b!=0:\n    \n    res=a%b\n    print(res)\nelif op =='div' and b!=0:\n    res=a//b\n    print(res)\nelse:\n    print(\"Деление на 0!\")\n#Жители страны Малевии часто экспериментируют с планировкой комнат. Комнаты бывают треугольные, прямоугольные и круглые. Чтобы быстро вычислять жилплощадь, требуется написать программу, на вход которой подаётся тип фигуры комнаты и соответствующие параметры, которая бы выводила площадь получившейся комнаты.Для числа π в стране Малевии используют значение 3.14.\npi = 3.14\ntip = input()\nif tip ==\"прямоугольник\" :\n    a = int(input())\n    b   = int(input())\n    pl = a *b\n    print(pl)\n\nelif  tip ==\"треугольник\" :\n     a = int(input())\n     b   = int(input())\n     c=  int(input())\n     p = (a+b+c)/2\n     s=  (p*(p-a)*(p-b)*(p-c))**(0.5)\n     print(s)\n\nelif  tip ==\"круг\" :\n    r =  int(input())\n    pl = r**2 * pi\n    print(pl)\n#Напишите программу, которая получает на вход три целых числа, по одному числу в строке, и выводит на консоль в три строки сначала максимальное, потом минимальное, после чего оставшееся число.На ввод могут подаваться и повторяющиеся числа.\np=int(input())\nv=int(input())\nt=int(input())\n \nres = [p,v,t]\nprint(max(res))\nprint(min(res))\nres.remove(max(res))\nres.remove(min(res))\nprint(res[0])\n#В институте биоинформатики по офису передвигается робот. Недавно студенты из группы программистов написали для него программу, по которой робот, когда заходит в комнату, считает количество программистов в ней и произносит его вслух: \"n программистов\".\nn = int(input())\nif n%10==1 and n%100!=11:\n    print(n, \"программист\")\nelif (n%10==2 or  n%10==3 or n%10== 4) and (n%100!=12 and n%100!=13 and  n%100!=14):\n    print(n, \"программиста\")\nelse:\n    print(n, \"программистов\")\n    ##Паша очень любит кататься на общественном транспорте, а получая билет, сразу проверяет, счастливый ли ему попался. Билет считается счастливым, если сумма первых трех цифр совпадает с суммой последних трех цифр номера билета.\n\n#Однако Паша очень плохо считает в уме, поэтому попросил вас написать программу, которая проверит равенство сумм и выведет \"Счастливый\", если суммы совпадают, и \"Обычный\", если суммы различны.\n\n    ticket_number = input()\n\n\nfirst_half_sum = sum(int(digit) for digit in ticket_number[:3])\nsecond_half_sum = sum(int(digit) for digit in ticket_number[3:])\n\n    # Сравниваем суммы и выводим результат\nif first_half_sum == second_half_sum:\n    print(\"Счастливый\")\nelse:\n    print(\"Обычный\")","metadata":{"execution":{"iopub.status.busy":"2024-07-10T13:05:38.473719Z","iopub.execute_input":"2024-07-10T13:05:38.474091Z","iopub.status.idle":"2024-07-10T13:05:41.796873Z","shell.execute_reply.started":"2024-07-10T13:05:38.474064Z","shell.execute_reply":"2024-07-10T13:05:41.795857Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdin","text":" 4\n 2\n 1\n"},{"name":"stdout","text":"(1.5686119320691177e-16+2.5617376914898995j)\n","output_type":"stream"}]},{"cell_type":"code","source":"#2  Циклы. Строки. Списки\n#Напишите программу, которая считывает со стандартного ввода целые числа, по одному числу в строке, и после первого введенного нуля выводит сумму полученных на вход чисел.\no = 0\nu= int(input())\nwhile u != 0:\n    o +=u\n    u= int(input())\n   \n    \nprint(o)\n\n#В Институте биоинформатики между информатиками и биологами устраивается соревнование. Победителям соревнования достанется большой и вкусный пирог. В команде биологов \n\ndef gcd(x, y):\n    # Алгоритм Евклида для нахождения НОД\n    while y != 0:\n        (x, y) = (y, x % y)\n    return x\n\ndef lcm(a, b):\n    # НОК находится через НОД\n    return abs(a*b) // gcd(a, b)\n\n# Ввод значений пользователем\na = int(input())\nb = int(input())\n\n# Вывод результата\nprint(lcm(a, b))\n\n\n#2.2 Операторы break, continue\n#Напишите программу, которая считывает целые числа с консоли по одному числу в строке.\ns=50\nwhile True:\n    s = int(input())\n    if s<10:\n        continue\n    elif s>100:\n        break\n    else:\n        print(s)\n        #Когда Павел учился в школе, он запоминал таблицу умножения прямоугольными блоками. Для тренировок ему бы очень пригодилась программа, которая показывала бы блок таблицы умножения.\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\n# Печать заголовка столбцов\nprint('\\t', end='')\nfor j in range(c, d + 1):\n    print(j, end='\\t')\nprint()\n\n# Печать строки таблицы умножения\nfor i in range(a, b + 1):\n    print(i, end='\\t')\n    for j in range(c, d + 1):\n        print(i * j, end='\\t')\n    print()\n    \n#GC-состав является важной характеристикой геномных последовательностей и определяется как процентное соотношение суммы всех гуанинов и цитозинов к общему числу нуклеиновых оснований в геномной последовательности.\nstringi = input()\nstringi=stringi.lower()\nk=0\nfor i in range(len(stringi)):\n    if stringi[i]==\"c\" or stringi[i]==\"g\":\n        k+=1\nprint( k/len(stringi)*100)\n#Есть строка s = \"abcdefghijk\".\n#В поле ответа через пробел запишите строки (без кавычек), полученные в результате следующих операций:\n# def abcdef defghijk kjihgfedcba ijk abcde kigec   \n\n#Узнав, что ДНК не является случайной строкой, только что поступившие в Институт биоинформатики студенты группы информатиков предложили использовать алгоритм сжатия, который сжимает повторяющиеся символы в строке.\n\n\nsrt = input()\n\nresult = ''  \ncount = 1   \n\nfor i in range(len(srt) - 1):\n    if srt[i] == srt[i + 1]:\n        count += 1\n    else:\n        result += srt[i] + str(count)\n        count = 1\n\nresult += srt[-1] + str(count)\n\nprint(result)\n\n#Напишите программу, на вход которой подается одна строка с целыми числами. Программа должна вывести сумму этих чисел.Используйте метод split строки. \na = [int(sum(int(i) for i in input().split()))]\nprint(a[0])\n#Напишите программу, на вход которой подаётся список чисел одной строкой. Программа должна для каждого элемента этого списка вывести сумму двух его соседей. Для элементов списка, являющихся крайними, одним из соседей считается элемент, находящий на противоположном конце этого списка. Например, если на вход подаётся список \"1 3 5 6 10\", то на выход ожидается список \"13 6 9 15 7\" (без кавычек).\nspis = list(map(int, input().split()))\ni=1\nif len(spis)==1:\n    print(spis[0])\nelse:\n    \n    res=[]   \n\n    for i in range(len(spis)-1):\n        res.append(int(spis[i-1])+int(spis[i+1]))\n    res.append(int(spis[-2])+int(spis[0]))\n    for j in range(len(spis)):\n        print(res[j],end=' ')\n        \n        #Напишите программу, которая принимает на вход список чисел в одной строке и выводит на экран в одну строку значения, которые встречаются в нём более одного раза.\n\n#Для решения задачи может пригодиться метод sort списка.\n\n#Выводимые числа не должны повторяться, порядок их вывода может быть произвольным.\n        \nspis = list(map(int, input().split()))\nspis.sort()\nres=[]\nfor i in range(len(spis)-1):\n    if spis[i]==spis[i+1]:\n        res.append(spis[i])\n    else:\n        continue\nres1=set(res)        \nprint(\" \".join(map(str, res1)))\n","metadata":{"execution":{"iopub.status.busy":"2024-07-11T11:46:58.829345Z","iopub.execute_input":"2024-07-11T11:46:58.830349Z","iopub.status.idle":"2024-07-11T12:15:00.532210Z","shell.execute_reply.started":"2024-07-11T11:46:58.830312Z","shell.execute_reply":"2024-07-11T12:15:00.530197Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":1,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","Cell \u001b[0;32mIn[1], line 4\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;66;03m#2  Циклы. Строки. Списки\u001b[39;00m\n\u001b[1;32m      2\u001b[0m \u001b[38;5;66;03m#Напишите программу, которая считывает со стандартного ввода целые числа, по одному числу в строке, и после первого введенного нуля выводит сумму полученных на вход чисел.\u001b[39;00m\n\u001b[1;32m      3\u001b[0m o \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m0\u001b[39m\n\u001b[0;32m----> 4\u001b[0m u\u001b[38;5;241m=\u001b[39m \u001b[38;5;28mint\u001b[39m(\u001b[38;5;28;43minput\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m)\n\u001b[1;32m      5\u001b[0m \u001b[38;5;28;01mwhile\u001b[39;00m u \u001b[38;5;241m!=\u001b[39m \u001b[38;5;241m0\u001b[39m:\n\u001b[1;32m      6\u001b[0m     o \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39mu\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/ipykernel/kernelbase.py:1262\u001b[0m, in \u001b[0;36mKernel.raw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m   1260\u001b[0m     msg \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mraw_input was called, but this frontend does not support input requests.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m   1261\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m StdinNotImplementedError(msg)\n\u001b[0;32m-> 1262\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_input_request\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   1263\u001b[0m \u001b[43m    \u001b[49m\u001b[38;5;28;43mstr\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mprompt\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1264\u001b[0m \u001b[43m    \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_parent_ident\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mshell\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1265\u001b[0m \u001b[43m    \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_parent\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mshell\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1266\u001b[0m \u001b[43m    \u001b[49m\u001b[43mpassword\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m,\u001b[49m\n\u001b[1;32m   1267\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/ipykernel/kernelbase.py:1305\u001b[0m, in \u001b[0;36mKernel._input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m   1302\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyboardInterrupt\u001b[39;00m:\n\u001b[1;32m   1303\u001b[0m     \u001b[38;5;66;03m# re-raise KeyboardInterrupt, to truncate traceback\u001b[39;00m\n\u001b[1;32m   1304\u001b[0m     msg \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mInterrupted by user\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m-> 1305\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyboardInterrupt\u001b[39;00m(msg) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m   1306\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m:\n\u001b[1;32m   1307\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mlog\u001b[38;5;241m.\u001b[39mwarning(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mInvalid Message:\u001b[39m\u001b[38;5;124m\"\u001b[39m, exc_info\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m)\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"],"ename":"KeyboardInterrupt","evalue":"Interrupted by user","output_type":"error"}]},{"cell_type":"code","source":"#2.6 Задачи по материалам недели\n#Напишите программу, которая считывает с консоли числа (по одному в строке) до тех пор, пока сумма введённых чисел не будет равна 0 и сразу после этого выводит сумму квадратов всех считанных чисел.\nnums = []\nsums=0\nkv=0\nwhile True:\n    nums=int(input())\n    sums +=nums\n    kv +=nums*nums\n    if sums==0:\n        break            \nprint(kv)   \n#Напишите программу, которая выводит часть последовательности 1 2 2 3 3 3 4 4 4 4 5 5 5 5 5 ... (число повторяется столько раз, чему равно). На вход программе передаётся неотрицательное целое число n — столько элементов последовательности должна отобразить программа. На выходе ожидается последовательность чисел, записанных через пробел в одну строку.\n\nn= int(input())\nspis=[]\nfor i in range(n+1):\n    spis.extend([i]*i)\nfor j in range(n):\n    print(spis[j],end=' ')\n##Напишите программу, которая считывает список чисел \n\n\nlst = list(map(int, input().split()))\nx=int(input())\nposs=[]\nk=0\nfor i in lst:\n    if x == i:\n        poss.append(k)\n    k+=1\nif poss:\n    print(*poss)\nelse:\n    print(\"Отсутствует\")","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#3.1 Функции\n#Напишите функцию f(x), которая возвращает значение следующей функции, определённой на всей числовой прямой:\n\n\ndef f(x):\n    res=0 \n    if x <=-2 :\n        res = 1-((x+2)**2)\n    elif -2<x<=2:\n        res=-(x/2)\n    else:\n        res = ((x-2)**2)+1\n    return res\n    \n    # put your python code here\n\n\n\n\n\n    ","metadata":{},"execution_count":null,"outputs":[]}]}